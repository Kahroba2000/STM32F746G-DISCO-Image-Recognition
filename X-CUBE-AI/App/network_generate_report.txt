Neural Network Tools for STM32AI v1.6.0 (STM.ai v7.2.0-RC5)
Created date          : 2022-08-11 18:18:50
Parameters            : generate --name network -m C:/TouchGFXProjects/catsvsdogs.h5 --type keras --compression none --verbosity 1 --workspace C:\Users\Kep\AppData\Local\Temp\mxAI_workspace721933704760814555048368675876079 --output C:\Users\Kep\.stm32cubemx\network_output --allocate-inputs --allocate-outputs

Exec/report summary (generate)
------------------------------------------------------------------------------------------------------------------------
model file            : C:\TouchGFXProjects\catsvsdogs.h5
type                  : keras
c_name                : network
compression           : none
allocator strategy    : ['allocate-inputs', 'allocate-outputs']
workspace dir         : C:\Users\Kep\AppData\Local\Temp\mxAI_workspace721933704760814555048368675876079
output dir            : C:\Users\Kep\.stm32cubemx\network_output
model_name            : catsvsdogs
model_hash            : ca20dc89d5ff52fdcb1fc36d22bc6a5d
input 1/1             : 'input_0'
                        2500 items, 9.77 KiB, ai_float, float, (1,50,50,1), domain:activations/**default**
output 1/1            : 'dense_2'
                        1 items, 4 B, ai_float, float, (1,1,1,1), domain:activations/**default**
params #              : 224,705 items (877.75 KiB)
macc                  : 8,478,619
weights (ro)          : 898,820 B (877.75 KiB) (1 segment)
activations (rw)      : 54,968 B (53.68 KiB) (1 segment) *
ram (total)           : 54,968 B (53.68 KiB) = 54,968 + 0 + 0

(*) input/output buffers can be used from the activations buffer

Model name - catsvsdogs ['input_0'] ['dense_2']
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
id   layer (type,original)                  oshape                    param/size        macc        connected to      |   c_size              c_macc                  c_type                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0    input_0 (Input, None)                  [b:None,h:50,w:50,c:1]                                                    |                                              
     conv2d_conv2d (Conv2D, Conv2D)         [b:None,h:50,w:50,c:16]   160/640           360,016     input_0           |   -640(-100.0%)       -360,016(-100.0%)      
     conv2d (Nonlinearity, Conv2D)          [b:None,h:50,w:50,c:16]                     40,000      conv2d_conv2d     |                       -40,000(-100.0%)       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1    max_pooling2d (Pool, MaxPooling2D)     [b:None,h:25,w:25,c:16]                     40,000      conv2d            |   +640(+100.0%)       +400,016(+1000.0%)      optimized_conv2d_of32[0]   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2    conv2d_1_conv2d (Conv2D, Conv2D)       [b:None,h:25,w:25,c:32]   4,640/18,560      2,880,032   max_pooling2d     |   -18,560(-100.0%)    -2,880,032(-100.0%)    
     conv2d_1 (Nonlinearity, Conv2D)        [b:None,h:25,w:25,c:32]                     20,000      conv2d_1_conv2d   |                       -20,000(-100.0%)       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3    max_pooling2d_1 (Pool, MaxPooling2D)   [b:None,h:13,w:13,c:32]                     21,632      conv2d_1          |   +18,560(+100.0%)    +2,900,032(+13406.2%)   optimized_conv2d_of32[1]   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4    conv2d_2_conv2d (Conv2D, Conv2D)       [b:None,h:13,w:13,c:64]   18,496/73,984     3,115,072   max_pooling2d_1   |   -73,984(-100.0%)    -3,115,072(-100.0%)    
     conv2d_2 (Nonlinearity, Conv2D)        [b:None,h:13,w:13,c:64]                     10,816      conv2d_2_conv2d   |                       -10,816(-100.0%)       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5    max_pooling2d_2 (Pool, MaxPooling2D)   [b:None,h:7,w:7,c:64]                       12,544      conv2d_2          |   +73,984(+100.0%)    +3,125,888(+24919.4%)   optimized_conv2d_of32[2]   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6    conv2d_3_conv2d (Conv2D, Conv2D)       [b:None,h:7,w:7,c:64]     36,928/147,712    1,806,400   max_pooling2d_2   |   -147,712(-100.0%)   -1,806,400(-100.0%)    
     conv2d_3 (Nonlinearity, Conv2D)        [b:None,h:7,w:7,c:64]                       3,136       conv2d_3_conv2d   |                       -3,136(-100.0%)        
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7    max_pooling2d_3 (Pool, MaxPooling2D)   [b:None,h:4,w:4,c:64]                       4,096       conv2d_3          |   +147,712(+100.0%)   +1,809,536(+44178.1%)   optimized_conv2d_of32[3]   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8    flatten (Reshape, Flatten)             [b:None,c:1024]                                         max_pooling2d_3   |                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10   dense_dense (Dense, Dense)             [b:None,c:128]            131,200/524,800   131,200     flatten           |                       +128(+0.1%)             dense_of32/nl_of32[4, 5]   
     dense (Nonlinearity, Dense)            [b:None,c:128]                              128         dense_dense       |                       -128(-100.0%)          
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12   dense_1_dense (Dense, Dense)           [b:None,c:256]            33,024/132,096    33,024      dense             |                       +256(+0.8%)             dense_of32/nl_of32[6, 7]   
     dense_1 (Nonlinearity, Dense)          [b:None,c:256]                              256         dense_1_dense     |                       -256(-100.0%)          
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13   dense_2_dense (Dense, Dense)           [b:None,c:1]              257/1,028         257         dense_1           |                       +10(+3.9%)              dense_of32/nl_of32[o][8, 9]
     dense_2 (Nonlinearity, Dense)          [b:None,c:1]                                10          dense_2_dense     |                       -10(-100.0%)           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
model/c-model: macc=8,478,619/8,478,619  weights=898,820/898,820  activations=--/54,968 io=--/0



Generated C-graph summary
------------------------------------------------------------------------------------------------------------------------
model name            : catsvsdogs
c-name                : network
c-node #              : 10
c-array #             : 29
activations size      : 54968 (1 segments)
weights size          : 898820 (1 segments)
macc                  : 8478619
inputs                : ['input_0_output']
outputs               : ['dense_2_output']

C-Arrays (29)
----------------------------------------------------------------------------------------------------------
c_id   name (*_array)             item/size       domain/mem-pool           c-type        fmt     comment
----------------------------------------------------------------------------------------------------------
0      input_0_output             2500/10000      activations/**default**   float         float   /input 
1      conv2d_conv2d_output       10000/40000     activations/**default**   float         float          
2      conv2d_1_conv2d_output     5408/21632      activations/**default**   float         float          
3      conv2d_2_conv2d_output     3136/12544      activations/**default**   float         float          
4      conv2d_3_conv2d_output     1024/4096       activations/**default**   float         float          
5      dense_dense_output         128/512         activations/**default**   float         float          
6      dense_output               128/512         activations/**default**   float         float          
7      dense_1_dense_output       256/1024        activations/**default**   float         float          
8      dense_1_output             256/1024        activations/**default**   float         float          
9      dense_2_dense_output       1/4             activations/**default**   float         float          
10     dense_2_output             1/4             activations/**default**   float         float   /output
11     conv2d_conv2d_weights      144/576         weights/weights           const float   float          
12     conv2d_conv2d_bias         16/64           weights/weights           const float   float          
13     conv2d_1_conv2d_weights    4608/18432      weights/weights           const float   float          
14     conv2d_1_conv2d_bias       32/128          weights/weights           const float   float          
15     conv2d_2_conv2d_weights    18432/73728     weights/weights           const float   float          
16     conv2d_2_conv2d_bias       64/256          weights/weights           const float   float          
17     conv2d_3_conv2d_weights    36864/147456    weights/weights           const float   float          
18     conv2d_3_conv2d_bias       64/256          weights/weights           const float   float          
19     dense_dense_weights        131072/524288   weights/weights           const float   float          
20     dense_dense_bias           128/512         weights/weights           const float   float          
21     dense_1_dense_weights      32768/131072    weights/weights           const float   float          
22     dense_1_dense_bias         256/1024        weights/weights           const float   float          
23     dense_2_dense_weights      256/1024        weights/weights           const float   float          
24     dense_2_dense_bias         1/4             weights/weights           const float   float          
25     conv2d_conv2d_scratch0     1600/6400       activations/**default**   float         float          
26     conv2d_1_conv2d_scratch0   1600/6400       activations/**default**   float         float          
27     conv2d_2_conv2d_scratch0   1664/6656       activations/**default**   float         float          
28     conv2d_3_conv2d_scratch0   896/3584        activations/**default**   float         float          
----------------------------------------------------------------------------------------------------------

C-Layers (10)
-----------------------------------------------------------------------------------------------------------------------
c_id   name (*_layer)    id   layer_type          macc      rom      tensors                       shape (array id)   
-----------------------------------------------------------------------------------------------------------------------
0      conv2d_conv2d     1    optimized_conv2d    440016    640      I: input_0_output             (1,50,50,1) (0)    
                                                                     S: conv2d_conv2d_scratch0                        
                                                                     W: conv2d_conv2d_weights      (1,16,3,3) (11)    
                                                                     W: conv2d_conv2d_bias         (1,1,1,16) (12)    
                                                                     O: conv2d_conv2d_output       (1,25,25,16) (1)   
-----------------------------------------------------------------------------------------------------------------------
1      conv2d_1_conv2d   3    optimized_conv2d    2921664   18560    I: conv2d_conv2d_output       (1,25,25,16) (1)   
                                                                     S: conv2d_1_conv2d_scratch0                      
                                                                     W: conv2d_1_conv2d_weights    (16,32,3,3) (13)   
                                                                     W: conv2d_1_conv2d_bias       (1,1,1,32) (14)    
                                                                     O: conv2d_1_conv2d_output     (1,13,13,32) (2)   
-----------------------------------------------------------------------------------------------------------------------
2      conv2d_2_conv2d   5    optimized_conv2d    3138432   73984    I: conv2d_1_conv2d_output     (1,13,13,32) (2)   
                                                                     S: conv2d_2_conv2d_scratch0                      
                                                                     W: conv2d_2_conv2d_weights    (32,64,3,3) (15)   
                                                                     W: conv2d_2_conv2d_bias       (1,1,1,64) (16)    
                                                                     O: conv2d_2_conv2d_output     (1,7,7,64) (3)     
-----------------------------------------------------------------------------------------------------------------------
3      conv2d_3_conv2d   7    optimized_conv2d    1813632   147712   I: conv2d_2_conv2d_output     (1,7,7,64) (3)     
                                                                     S: conv2d_3_conv2d_scratch0                      
                                                                     W: conv2d_3_conv2d_weights    (64,64,3,3) (17)   
                                                                     W: conv2d_3_conv2d_bias       (1,1,1,64) (18)    
                                                                     O: conv2d_3_conv2d_output     (1,4,4,64) (4)     
-----------------------------------------------------------------------------------------------------------------------
4      dense_dense       10   dense               131200    524800   I: conv2d_3_conv2d_output0    (1,1,1,1024) (4)   
                                                                     W: dense_dense_weights        (1024,1,1,128) (19)
                                                                     W: dense_dense_bias           (1,1,1,128) (20)   
                                                                     O: dense_dense_output         (1,1,1,128) (5)    
-----------------------------------------------------------------------------------------------------------------------
5      dense             10   nl                  128       0        I: dense_dense_output         (1,1,1,128) (5)    
                                                                     O: dense_output               (1,1,1,128) (6)    
-----------------------------------------------------------------------------------------------------------------------
6      dense_1_dense     12   dense               33024     132096   I: dense_output               (1,1,1,128) (6)    
                                                                     W: dense_1_dense_weights      (128,1,1,256) (21) 
                                                                     W: dense_1_dense_bias         (1,1,1,256) (22)   
                                                                     O: dense_1_dense_output       (1,1,1,256) (7)    
-----------------------------------------------------------------------------------------------------------------------
7      dense_1           12   nl                  256       0        I: dense_1_dense_output       (1,1,1,256) (7)    
                                                                     O: dense_1_output             (1,1,1,256) (8)    
-----------------------------------------------------------------------------------------------------------------------
8      dense_2_dense     13   dense               257       1028     I: dense_1_output             (1,1,1,256) (8)    
                                                                     W: dense_2_dense_weights      (256,1,1,1) (23)   
                                                                     W: dense_2_dense_bias         (1,1,1,1) (24)     
                                                                     O: dense_2_dense_output       (1,1,1,1) (9)      
-----------------------------------------------------------------------------------------------------------------------
9      dense_2           13   nl                  10        0        I: dense_2_dense_output       (1,1,1,1) (9)      
                                                                     O: dense_2_output             (1,1,1,1) (10)     
-----------------------------------------------------------------------------------------------------------------------



Number of operations per c-layer
-------------------------------------------------------------------------------------------------------------
c_id    m_id   name (type)                          #op (type)                       #param (sparsity)      
-------------------------------------------------------------------------------------------------------------
0       1      conv2d_conv2d (optimized_conv2d)             440,016 (smul_f32_f32)              160 (0.0000)
1       3      conv2d_1_conv2d (optimized_conv2d)         2,921,664 (smul_f32_f32)            4,640 (0.0000)
2       5      conv2d_2_conv2d (optimized_conv2d)         3,138,432 (smul_f32_f32)           18,496 (0.0000)
3       7      conv2d_3_conv2d (optimized_conv2d)         1,813,632 (smul_f32_f32)           36,928 (0.0000)
4       10     dense_dense (dense)                          131,200 (smul_f32_f32)          131,200 (0.0000)
5       10     dense (nl)                                       128 (op_f32_f32)                            
6       12     dense_1_dense (dense)                         33,024 (smul_f32_f32)           33,024 (0.0000)
7       12     dense_1 (nl)                                     256 (op_f32_f32)                            
8       13     dense_2_dense (dense)                            257 (smul_f32_f32)              257 (0.0000)
9       13     dense_2 (nl)                                      10 (op_f32_f32)                            
-------------------------------------------------------------------------------------------------------------
total                                                     8,478,619                         224,705 (0.0000)

  Number of operation types
  ---------------------------------------------
  smul_f32_f32           8,478,225      100.0%
  op_f32_f32                   394        0.0%

Complexity report (model)
------------------------------------------------------------------------------------
m_id   name              c_macc                    c_rom                     c_id  
------------------------------------------------------------------------------------
1      max_pooling2d     |||                5.2%   |                  0.1%   [0]   
3      max_pooling2d_1   ||||||||||||||    34.5%   |                  2.1%   [1]   
5      max_pooling2d_2   ||||||||||||||||  37.0%   |||                8.2%   [2]   
7      max_pooling2d_3   |||||||||         21.4%   |||||             16.4%   [3]   
10     dense_dense       |                  1.5%   ||||||||||||||||  58.4%   [4, 5]
12     dense_1_dense     |                  0.4%   ||||              14.7%   [6, 7]
13     dense_2_dense     |                  0.0%   |                  0.1%   [8, 9]
------------------------------------------------------------------------------------
macc=8,478,619 weights=898,820 act=54,968 ram_io=0

Generated files (7)
------------------------------------------------------------------------
C:\Users\Kep\.stm32cubemx\network_output\network_config.h
C:\Users\Kep\.stm32cubemx\network_output\network.h
C:\Users\Kep\.stm32cubemx\network_output\network.c
C:\Users\Kep\.stm32cubemx\network_output\network_data_params.h
C:\Users\Kep\.stm32cubemx\network_output\network_data_params.c
C:\Users\Kep\.stm32cubemx\network_output\network_data.h
C:\Users\Kep\.stm32cubemx\network_output\network_data.c
